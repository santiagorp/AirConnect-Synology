#!/bin/sh

set -eu

AIRCONNECT_DIR="/var/packages/AirConnect/target"

logfile=/tmp/airupnp.log

start_airupnp ()
{
    ip="$1"
    port=49154
    echo "[$(date +'%T')] Starting airupnp on ${ip}:${port}" >> ${logfile}

    # su airconnect -s /bin/sh -c "${AIRCONNECT_DIR}/airupnp -b ${ip}:${port} -z -l 1000:2000 -f ${logfile} -d all=error -d main=info" >> ${logfile} 2>&1
    su airconnect -s /bin/sh -c "${AIRCONNECT_DIR}/airupnp -b ${ip}:${port} -z -f ${logfile} -d all=error -d main=info" >> ${logfile} 2>&1

    cnt=0
    while [ $cnt -lt 5 ]; do
        if grep -q "adding renderer" ${logfile}; then
            return 0
        fi
        cnt=$((cnt + 1))
        sleep 1
    done
    return 1
}

start_airconnect ()
{
    rm -f "${logfile}"
    touch "${logfile}"
    chown airconnect:users "${logfile}"

    # If you want to start the airupnp process on a specific IP please uncomment the following lines
    # and set your own local IP address:
    #
    # start_airupnp "1.2.3.4" || true
    # return  0

    interfaces=$(ifconfig -a | grep 'Ethernet' -A 1 | grep -E 'inet (addr:)?(192\.168\.|10\.|172\.(1[6-9]|2[0-9]|3[01])\.)' -B 1 | grep 'Ethernet' | grep -v "lbr0" | cut -d ' ' -f 1 | grep -v docker)

    if [ -z "$interfaces" ]; then
        echo "Failed to get local Ethernet interfaces" > "${SYNOPKG_TEMP_LOGFILE}"
        exit 1
    fi

    # Try lbr0 interface first if exists
    interfaces="lbr0 $interfaces"

    for interface in $interfaces; do
        ip=$(/sbin/ifconfig "$interface" | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}')
        if [ -n "$ip" ]; then
            if start_airupnp "$ip"; then
                return 0
            else
                killall -15 airupnp
            fi
        fi
    done

    echo "Failed to start airupnp on any of the local interfaces, please make sure you have at least one UPnP/Sonos device on your network" > "${SYNOPKG_TEMP_LOGFILE}"
    exit 1
}

stop_airconnect ()
{
    killall -15 airupnp
}

airconnect_status ()
{
    # Check if ps has ax options
    if ps ax >/dev/null 2>&1; then
        # shellcheck disable=SC2009
        if ! ps ax | grep airupnp | grep -v -q grep; then
            return 1
        fi
    else
        # shellcheck disable=SC2009
        if ! ps | grep airupnp | grep -v -q grep; then
            return 1
        fi
    fi

    return 0
}

case $1 in
    start)
        echo Starting AirConnect ...
        start_airconnect
        exit $?
        ;;
    stop)
        echo Stopping AirConnect ...
        stop_airconnect
        exit $?
        ;;
    status)
        if airconnect_status
        then
            echo AirConnect is running
            exit 0
        else
            echo AirConnect is not running
            exit 1
        fi
        ;;
    log)
        echo "/tmp/airupnp.log"
        exit 0
        ;;
    *)
        exit 1
        ;;
esac
